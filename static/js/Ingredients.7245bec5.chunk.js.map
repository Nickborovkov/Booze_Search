{"version":3,"sources":["../node_modules/@mui/material/Card/cardClasses.js","../node_modules/@mui/material/Card/Card.js","../node_modules/@mui/material/CardContent/cardContentClasses.js","../node_modules/@mui/material/CardContent/CardContent.js","../node_modules/@mui/material/CardActions/cardActionsClasses.js","../node_modules/@mui/material/CardActions/CardActions.js","components/ingredients/Ingredients.jsx"],"names":["getCardUtilityClass","slot","generateUtilityClass","generateUtilityClasses","_excluded","CardRoot","styled","Paper","name","overridesResolver","props","styles","root","overflow","Card","React","inProps","ref","useThemeProps","className","raised","other","_objectWithoutPropertiesLoose","ownerState","_extends","classes","composeClasses","useUtilityClasses","_jsx","clsx","elevation","undefined","getCardContentUtilityClass","CardContentRoot","padding","paddingBottom","CardContent","component","as","getCardActionsUtilityClass","CardActionsRoot","disableSpacing","spacing","display","alignItems","marginLeft","CardActions","slots","Ingredients","dispatch","useDispatch","ingredientName","match","params","ingredient","useSelector","state","booze","isLoading","common","useEffect","getIngredientByName","Preloader","Box","sx","justifyContent","pt","pb","maxWidth","Typography","gutterBottom","variant","strIngredient","style","color","strAlcohol","strABV","strDescription","Button","size","onClick","history","goBack","to","textDecoration"],"mappings":"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","file":"static/js/Ingredients.7245bec5.chunk.js","sourcesContent":["import { generateUtilityClass, generateUtilityClasses } from '@mui/core';\nexport function getCardUtilityClass(slot) {\n  return generateUtilityClass('MuiCard', slot);\n}\nconst cardClasses = generateUtilityClasses('MuiCard', ['root']);\nexport default cardClasses;","import _extends from \"@babel/runtime/helpers/esm/extends\";\nimport _objectWithoutPropertiesLoose from \"@babel/runtime/helpers/esm/objectWithoutPropertiesLoose\";\nconst _excluded = [\"className\", \"raised\"];\nimport * as React from 'react';\nimport PropTypes from 'prop-types';\nimport clsx from 'clsx';\nimport { chainPropTypes } from '@mui/utils';\nimport { unstable_composeClasses as composeClasses } from '@mui/core';\nimport styled from '../styles/styled';\nimport useThemeProps from '../styles/useThemeProps';\nimport Paper from '../Paper';\nimport { getCardUtilityClass } from './cardClasses';\nimport { jsx as _jsx } from \"react/jsx-runtime\";\n\nconst useUtilityClasses = ownerState => {\n  const {\n    classes\n  } = ownerState;\n  const slots = {\n    root: ['root']\n  };\n  return composeClasses(slots, getCardUtilityClass, classes);\n};\n\nconst CardRoot = styled(Paper, {\n  name: 'MuiCard',\n  slot: 'Root',\n  overridesResolver: (props, styles) => styles.root\n})(() => {\n  return {\n    overflow: 'hidden'\n  };\n});\nconst Card = /*#__PURE__*/React.forwardRef(function Card(inProps, ref) {\n  const props = useThemeProps({\n    props: inProps,\n    name: 'MuiCard'\n  });\n\n  const {\n    className,\n    raised = false\n  } = props,\n        other = _objectWithoutPropertiesLoose(props, _excluded);\n\n  const ownerState = _extends({}, props, {\n    raised\n  });\n\n  const classes = useUtilityClasses(ownerState);\n  return /*#__PURE__*/_jsx(CardRoot, _extends({\n    className: clsx(classes.root, className),\n    elevation: raised ? 8 : undefined,\n    ref: ref,\n    ownerState: ownerState\n  }, other));\n});\nprocess.env.NODE_ENV !== \"production\" ? Card.propTypes\n/* remove-proptypes */\n= {\n  // ----------------------------- Warning --------------------------------\n  // | These PropTypes are generated from the TypeScript type definitions |\n  // |     To update them edit the d.ts file and run \"yarn proptypes\"     |\n  // ----------------------------------------------------------------------\n\n  /**\n   * The content of the component.\n   */\n  children: PropTypes.node,\n\n  /**\n   * Override or extend the styles applied to the component.\n   */\n  classes: PropTypes.object,\n\n  /**\n   * @ignore\n   */\n  className: PropTypes.string,\n\n  /**\n   * If `true`, the card will use raised styling.\n   * @default false\n   */\n  raised: chainPropTypes(PropTypes.bool, props => {\n    if (props.raised && props.variant === 'outlined') {\n      return new Error('MUI: Combining `raised={true}` with `variant=\"outlined\"` has no effect.');\n    }\n\n    return null;\n  }),\n\n  /**\n   * The system prop that allows defining system overrides as well as additional CSS styles.\n   */\n  sx: PropTypes.object\n} : void 0;\nexport default Card;","import { generateUtilityClass, generateUtilityClasses } from '@mui/core';\nexport function getCardContentUtilityClass(slot) {\n  return generateUtilityClass('MuiCardContent', slot);\n}\nconst cardContentClasses = generateUtilityClasses('MuiCardContent', ['root']);\nexport default cardContentClasses;","import _extends from \"@babel/runtime/helpers/esm/extends\";\nimport _objectWithoutPropertiesLoose from \"@babel/runtime/helpers/esm/objectWithoutPropertiesLoose\";\nconst _excluded = [\"className\", \"component\"];\nimport * as React from 'react';\nimport PropTypes from 'prop-types';\nimport clsx from 'clsx';\nimport { unstable_composeClasses as composeClasses } from '@mui/core';\nimport styled from '../styles/styled';\nimport useThemeProps from '../styles/useThemeProps';\nimport { getCardContentUtilityClass } from './cardContentClasses';\nimport { jsx as _jsx } from \"react/jsx-runtime\";\n\nconst useUtilityClasses = ownerState => {\n  const {\n    classes\n  } = ownerState;\n  const slots = {\n    root: ['root']\n  };\n  return composeClasses(slots, getCardContentUtilityClass, classes);\n};\n\nconst CardContentRoot = styled('div', {\n  name: 'MuiCardContent',\n  slot: 'Root',\n  overridesResolver: (props, styles) => styles.root\n})(() => {\n  return {\n    padding: 16,\n    '&:last-child': {\n      paddingBottom: 24\n    }\n  };\n});\nconst CardContent = /*#__PURE__*/React.forwardRef(function CardContent(inProps, ref) {\n  const props = useThemeProps({\n    props: inProps,\n    name: 'MuiCardContent'\n  });\n\n  const {\n    className,\n    component = 'div'\n  } = props,\n        other = _objectWithoutPropertiesLoose(props, _excluded);\n\n  const ownerState = _extends({}, props, {\n    component\n  });\n\n  const classes = useUtilityClasses(ownerState);\n  return /*#__PURE__*/_jsx(CardContentRoot, _extends({\n    as: component,\n    className: clsx(classes.root, className),\n    ownerState: ownerState,\n    ref: ref\n  }, other));\n});\nprocess.env.NODE_ENV !== \"production\" ? CardContent.propTypes\n/* remove-proptypes */\n= {\n  // ----------------------------- Warning --------------------------------\n  // | These PropTypes are generated from the TypeScript type definitions |\n  // |     To update them edit the d.ts file and run \"yarn proptypes\"     |\n  // ----------------------------------------------------------------------\n\n  /**\n   * The content of the component.\n   */\n  children: PropTypes.node,\n\n  /**\n   * Override or extend the styles applied to the component.\n   */\n  classes: PropTypes.object,\n\n  /**\n   * @ignore\n   */\n  className: PropTypes.string,\n\n  /**\n   * The component used for the root node.\n   * Either a string to use a HTML element or a component.\n   */\n  component: PropTypes.elementType,\n\n  /**\n   * The system prop that allows defining system overrides as well as additional CSS styles.\n   */\n  sx: PropTypes.object\n} : void 0;\nexport default CardContent;","import { generateUtilityClass, generateUtilityClasses } from '@mui/core';\nexport function getCardActionsUtilityClass(slot) {\n  return generateUtilityClass('MuiCardActions', slot);\n}\nconst cardActionsClasses = generateUtilityClasses('MuiCardActions', ['root', 'spacing']);\nexport default cardActionsClasses;","import _objectWithoutPropertiesLoose from \"@babel/runtime/helpers/esm/objectWithoutPropertiesLoose\";\nimport _extends from \"@babel/runtime/helpers/esm/extends\";\nconst _excluded = [\"disableSpacing\", \"className\"];\nimport * as React from 'react';\nimport PropTypes from 'prop-types';\nimport clsx from 'clsx';\nimport { unstable_composeClasses as composeClasses } from '@mui/core';\nimport styled from '../styles/styled';\nimport useThemeProps from '../styles/useThemeProps';\nimport { getCardActionsUtilityClass } from './cardActionsClasses';\nimport { jsx as _jsx } from \"react/jsx-runtime\";\n\nconst useUtilityClasses = ownerState => {\n  const {\n    classes,\n    disableSpacing\n  } = ownerState;\n  const slots = {\n    root: ['root', !disableSpacing && 'spacing']\n  };\n  return composeClasses(slots, getCardActionsUtilityClass, classes);\n};\n\nconst CardActionsRoot = styled('div', {\n  name: 'MuiCardActions',\n  slot: 'Root',\n  overridesResolver: (props, styles) => {\n    const {\n      ownerState\n    } = props;\n    return [styles.root, !ownerState.disableSpacing && styles.spacing];\n  }\n})(({\n  ownerState\n}) => _extends({\n  display: 'flex',\n  alignItems: 'center',\n  padding: 8\n}, !ownerState.disableSpacing && {\n  '& > :not(:first-of-type)': {\n    marginLeft: 8\n  }\n}));\nconst CardActions = /*#__PURE__*/React.forwardRef(function CardActions(inProps, ref) {\n  const props = useThemeProps({\n    props: inProps,\n    name: 'MuiCardActions'\n  });\n\n  const {\n    disableSpacing = false,\n    className\n  } = props,\n        other = _objectWithoutPropertiesLoose(props, _excluded);\n\n  const ownerState = _extends({}, props, {\n    disableSpacing\n  });\n\n  const classes = useUtilityClasses(ownerState);\n  return /*#__PURE__*/_jsx(CardActionsRoot, _extends({\n    className: clsx(classes.root, className),\n    ownerState: ownerState,\n    ref: ref\n  }, other));\n});\nprocess.env.NODE_ENV !== \"production\" ? CardActions.propTypes\n/* remove-proptypes */\n= {\n  // ----------------------------- Warning --------------------------------\n  // | These PropTypes are generated from the TypeScript type definitions |\n  // |     To update them edit the d.ts file and run \"yarn proptypes\"     |\n  // ----------------------------------------------------------------------\n\n  /**\n   * The content of the component.\n   */\n  children: PropTypes.node,\n\n  /**\n   * Override or extend the styles applied to the component.\n   */\n  classes: PropTypes.object,\n\n  /**\n   * @ignore\n   */\n  className: PropTypes.string,\n\n  /**\n   * If `true`, the actions do not have additional margin.\n   * @default false\n   */\n  disableSpacing: PropTypes.bool,\n\n  /**\n   * The system prop that allows defining system overrides as well as additional CSS styles.\n   */\n  sx: PropTypes.object\n} : void 0;\nexport default CardActions;","import React, {useEffect} from \"react\";\r\nimport {useDispatch, useSelector} from \"react-redux\";\r\nimport {getIngredientByName} from \"../../store/boozeReducer\";\r\nimport Preloader from \"../common/preloader/Preloader\";\r\nimport Box from \"@mui/material/Box\";\r\nimport Card from \"@mui/material/Card\";\r\nimport CardContent from \"@mui/material/CardContent\";\r\nimport Typography from \"@mui/material/Typography\";\r\nimport CardActions from \"@mui/material/CardActions\";\r\nimport Button from \"@mui/material/Button\";\r\nimport {NavLink} from \"react-router-dom\";\r\n\r\nconst Ingredients = (props) => {\r\n\r\n    const dispatch = useDispatch()\r\n    const ingredientName = props.match.params.name\r\n    const ingredient = useSelector(state => state.booze.ingredient)\r\n    const isLoading = useSelector(state => state.common.isLoading)\r\n\r\n    useEffect(()=>{\r\n        dispatch(getIngredientByName(ingredientName))\r\n    },[dispatch, ingredientName])\r\n\r\n    return (\r\n        <div>\r\n\r\n            {isLoading && <Preloader/>}\r\n\r\n            {!isLoading && ingredient &&\r\n            <Box sx={{display: `flex`, justifyContent: `center`}} pt={5} pb={5}>\r\n                <Card sx={{ maxWidth: `80%` }}>\r\n                    <CardContent>\r\n                        <Typography gutterBottom variant=\"h3\" component=\"div\">\r\n                            {ingredient.strIngredient}\r\n                        </Typography>\r\n                        <Typography gutterBottom variant=\"h5\" component=\"div\">\r\n                            <span style={{color: `#00e676`}}>Is alcoholic: </span>{ingredient.strAlcohol || `No info`}\r\n                        </Typography>\r\n                        <Typography gutterBottom variant=\"h5\" component=\"div\">\r\n                            <span style={{color: `#00e676`}}>ABV°: </span>{ingredient.strABV || `No info`}\r\n                        </Typography>\r\n                        <Typography gutterBottom variant=\"p\" component=\"div\">\r\n                            <span style={{color: `#00e676`}}>Description: </span>{ingredient.strDescription  || `No info`}\r\n                        </Typography>\r\n                    </CardContent>\r\n                    <CardActions>\r\n                        <Button\r\n                            color='button'\r\n                            variant=\"contained\"\r\n                            size=\"small\"\r\n                            onClick={ () => {props.history.goBack()} }\r\n                        >\r\n                            Go back\r\n                        </Button>\r\n                        <Button\r\n                            color='button'\r\n                            variant=\"contained\"\r\n                            size=\"small\"\r\n                        >\r\n                            <NavLink\r\n                                to={`/cocktails/ByIngredient`}\r\n                                style={{textDecoration: `none`, color: `#ffffff`}}\r\n                            >\r\n                                More booze with this ingredient\r\n                            </NavLink>\r\n                        </Button>\r\n                    </CardActions>\r\n                </Card>\r\n            </Box>}\r\n        </div>\r\n    )\r\n}\r\n\r\nexport default Ingredients\r\n"],"sourceRoot":""}